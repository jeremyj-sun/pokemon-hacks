# Replays a sequence of key inputs from a file generated by keyStrokeLogger.py
import keyboard
import time
import config

'''
Parses one line from a keylog into key and duration
'''
def parseline(line: str):
    i = 0
    key = ""
    duration = ""
    while line[i] != ':':
        key += line[i]
        i += 1
    i += 2
    while line[i] != 's':
        duration += line[i]
        i += 1
    duration = float(duration)
    return key, duration

if __name__ == "__main__":
    replay_file = input("Enter the name of the keylog file you wish to replay:\n" )
    num_replays = int(input("Enter the desired number of consecutive replays:\n"))

    countdown = 5
    for i in range(countdown, 0, -1):
        if i == countdown:
            print(f"Replay beginning in {countdown}...")
        else:
            print(f"{i}...")
        time.sleep(1)

    ignore_sleeps = False

    for _ in range(num_replays):
        with open(replay_file, "r") as f:
            for line in f:
                if line == config.IGNORE_SLEEP_SEQUENCE:
                    print("IGNORING SLEEPS")
                    ignore_sleeps = True
                    continue
                elif line == config.RESUME_SLEEP_SEQUENCE:
                    print("RESUMING SLEEPS")
                    ignore_sleeps = False
                    continue

                key, duration = parseline(line)

                if key == 'sleep':
                    if ignore_sleeps == False:
                        time.sleep(duration)
                    else:
                        time.sleep(0.1)
                else:
                    keyboard.press(key)
                    time.sleep(duration)
                    keyboard.release(key)
        time.sleep(1)
